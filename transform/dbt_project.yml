## ---------------------------------------------------------------------------
## dbt Project Configuration
## This file tells dbt how to treat the code under the /transform folder.
## Reference docs: https://docs.getdbt.com/reference/dbt_project.yml
## ---------------------------------------------------------------------------

# Project name (used in target relation naming + manifest)
name: star_dw

# project's semantic version
version: 0.1.0

# dbt's internal config spec version = 2 unless docs say otherwise.
config-version: 2

# Profile name (must match a key in ~/.dbt/profiles.yml). Controls connection + schema.
profile: star

## File path locations (relative to this directory)
## Add/remove folders here if you reorganize.
model-paths: ["models"]          # Core .sql models (staging, dims, facts, marts)
analysis-paths: ["analyses"]     # Adâ€‘hoc / exploration queries (not run automatically)
test-paths: ["tests"]            # Singular (custom SQL) tests
seed-paths: ["seeds"]            # CSV seeds loaded with `dbt seed`
macro-paths: ["macros"]          # Reusable Jinja macros
snapshot-paths: ["snapshots"]    # Snapshot definitions for SCD2 tracking

## (Optional) You could also declare: docs-paths, asset-paths, etc.

## ---------------------------------------------------------------------------
## Build artifacts
## these are the files generated by dbt during the build process
## ---------------------------------------------------------------------------
target-path: target               # Compiled SQL + manifest.json output
clean-targets: ["target", "dbt_packages"]  # Removed by `dbt clean`

## ---------------------------------------------------------------------------
## Global model configs (can be overridden per subfolder or model via config())
## +materialized sets the default materialization strategy:
##   - view: simple database view
##   - table: create table (full-refresh by default)
##   - incremental: append/merge pattern (needs unique_key + logic)
## Folder-level keys below (staging/core) scope config to those directories.
## ---------------------------------------------------------------------------
models:
  star_dw:                       # Root namespace matches project name
    +materialized: view          # Default for anything not explicitly overridden
    staging:                     # models/staging/*
      +materialized: view        # Keep staging fast / ephemeral
    analytics:                   # models/analytics/* (dim, fact) curated layer
      +materialized: view
    semantic:                    # models/semantic/* (semantic models and metrics)
      +materialized: view
